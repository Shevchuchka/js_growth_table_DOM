{"mappings":"ACGA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAE/B,EAAW,SAAS,aAAa,CAAC,MAElC,EAAW,WAAM,OAAA,EAAM,iBAAiB,A,EACxC,EAAe,WAAM,OAAA,EAAS,iBAAiB,A,EAK/C,EAAS,SAAS,aAAa,CAAC,eAChC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAY,SAAS,aAAa,CAAC,kBACnC,EAAe,SAAS,aAAa,CAAC,kBAEtC,EAAc,SAAC,CAAA,CAAQ,CAAA,CAAW,CAAxC,EACE,IAAM,EAAU,SAAC,CAAjB,EACE,EAAI,YAAY,CAAC,WAAY,GAC/B,EAEM,EAAa,SAAC,CAApB,EACM,EAAI,YAAY,CAAC,aACnB,EAAI,eAAe,CAAC,WAExB,CAjBe,CAAA,IAmBX,GACF,EAAQ,GAGN,EAvBW,GAwBb,EAAW,GAvBE,KA0BX,GACF,EAAQ,GAGN,EA9BW,IA+Bb,EAAW,EAEf,EAEA,EAAO,gBAAgB,CAAC,QAAS,WAC/B,IAAM,EAAS,EAAS,SAAS,CAAC,CAAA,EApCnB,CAAA,GAsCX,KACF,EAAM,WAAW,CAAC,GAGpB,EAAY,EAAQ,EAAW,IACjC,GAEA,EAAU,gBAAgB,CAAC,QAAS,WAClC,IAAM,EAAY,SAAS,aAAa,CAAC,MAGlC,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,EADP,GAAI,AAhDW,GAgDX,IAAJ,GAAA,CACE,IAAA,IAAK,EAAA,EAAa,EAAM,QAAQ,CAAA,OAAA,QAAA,CAAA,GAA3B,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAA6B,CAA7B,IAAM,EAAN,EAAA,KAAA,CACG,EAAa,EAAU,SAAS,CAAC,CAAA,GAEvC,EAAI,MAAM,CAAC,EACb,C,C,M,E,CAJK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAOP,EAAY,EAAW,EAAc,IACvC,GAEA,EAAU,gBAAgB,CAAC,QAAS,WAC9B,IA7DW,IA8Db,EAAM,gBAAgB,CAAC,MAAM,GAE7B,EAAY,EAAQ,EAAW,KAEnC,GAEA,EAAa,gBAAgB,CAAC,QAAS,WAE9B,IAAA,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,EADP,GAAI,IArEW,EAqEf,GAAA,CACE,IAAA,IAAK,EAAA,EAAa,EAAM,QAAQ,CAAA,OAAA,QAAA,CAAA,GAA3B,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAL,CAAA,EACE,AADG,EAAA,KAAA,CACC,gBAAgB,CAAC,MAAM,E,C,M,E,CADxB,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAKP,EAAY,EAAW,EAAc,IACvC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// write code here\nvar tbody = document.querySelector(\"tbody\");\nvar firstRow = document.querySelector(\"tr\");\nvar rowCount = function() {\n    return tbody.childElementCount;\n};\nvar columnsCount = function() {\n    return firstRow.childElementCount;\n};\nvar minCount = 2;\nvar maxCount = 10;\nvar addRow = document.querySelector(\".append-row\");\nvar removeRow = document.querySelector(\".remove-row\");\nvar addColumn = document.querySelector(\".append-column\");\nvar removeColumn = document.querySelector(\".remove-column\");\nvar setDisabled = function(addBtn, removeBtn, counter) {\n    var setFunc = function(btn) {\n        btn.setAttribute(\"disabled\", \"\");\n    };\n    var removeFunc = function(btn) {\n        if (btn.hasAttribute(\"disabled\")) btn.removeAttribute(\"disabled\");\n    };\n    if (counter === minCount) setFunc(removeBtn);\n    if (counter > minCount) removeFunc(removeBtn);\n    if (counter === maxCount) setFunc(addBtn);\n    if (counter < maxCount) removeFunc(addBtn);\n};\naddRow.addEventListener(\"click\", function() {\n    var newRow = firstRow.cloneNode(true);\n    if (rowCount() < maxCount) tbody.appendChild(newRow);\n    setDisabled(addRow, removeRow, rowCount());\n});\naddColumn.addEventListener(\"click\", function() {\n    var newColumn = document.createElement(\"td\");\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    if (columnsCount() < maxCount) try {\n        for(var _iterator = tbody.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            var columnCopy = newColumn.cloneNode(true);\n            row.append(columnCopy);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    setDisabled(addColumn, removeColumn, columnsCount());\n});\nremoveRow.addEventListener(\"click\", function() {\n    if (rowCount() > minCount) {\n        tbody.lastElementChild.remove();\n        setDisabled(addRow, removeRow, rowCount());\n    }\n});\nremoveColumn.addEventListener(\"click\", function() {\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    if (columnsCount() > minCount) try {\n        for(var _iterator = tbody.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            row.lastElementChild.remove();\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    setDisabled(addColumn, removeColumn, columnsCount());\n});\n\n//# sourceMappingURL=index.02b555d6.js.map\n","'use strict';\n\n// write code here\nconst tbody = document.querySelector('tbody');\n\nconst firstRow = document.querySelector('tr');\n\nconst rowCount = () => tbody.childElementCount;\nconst columnsCount = () => firstRow.childElementCount;\n\nconst minCount = 2;\nconst maxCount = 10;\n\nconst addRow = document.querySelector('.append-row');\nconst removeRow = document.querySelector('.remove-row');\nconst addColumn = document.querySelector('.append-column');\nconst removeColumn = document.querySelector('.remove-column');\n\nconst setDisabled = (addBtn, removeBtn, counter) => {\n  const setFunc = (btn) => {\n    btn.setAttribute('disabled', '');\n  };\n\n  const removeFunc = (btn) => {\n    if (btn.hasAttribute('disabled')) {\n      btn.removeAttribute('disabled');\n    }\n  };\n\n  if (counter === minCount) {\n    setFunc(removeBtn);\n  }\n\n  if (counter > minCount) {\n    removeFunc(removeBtn);\n  }\n\n  if (counter === maxCount) {\n    setFunc(addBtn);\n  }\n\n  if (counter < maxCount) {\n    removeFunc(addBtn);\n  }\n};\n\naddRow.addEventListener('click', () => {\n  const newRow = firstRow.cloneNode(true);\n\n  if (rowCount() < maxCount) {\n    tbody.appendChild(newRow);\n  }\n\n  setDisabled(addRow, removeRow, rowCount());\n});\n\naddColumn.addEventListener('click', () => {\n  const newColumn = document.createElement('td');\n\n  if (columnsCount() < maxCount) {\n    for (const row of tbody.children) {\n      const columnCopy = newColumn.cloneNode(true);\n\n      row.append(columnCopy);\n    }\n  }\n\n  setDisabled(addColumn, removeColumn, columnsCount());\n});\n\nremoveRow.addEventListener('click', () => {\n  if (rowCount() > minCount) {\n    tbody.lastElementChild.remove();\n\n    setDisabled(addRow, removeRow, rowCount());\n  }\n});\n\nremoveColumn.addEventListener('click', () => {\n  if (columnsCount() > minCount) {\n    for (const row of tbody.children) {\n      row.lastElementChild.remove();\n    }\n  }\n\n  setDisabled(addColumn, removeColumn, columnsCount());\n});\n"],"names":["tbody","document","querySelector","firstRow","rowCount","childElementCount","columnsCount","addRow","removeRow","addColumn","removeColumn","setDisabled","addBtn","removeBtn","counter","setFunc","btn","setAttribute","removeFunc","hasAttribute","removeAttribute","addEventListener","newRow","cloneNode","appendChild","newColumn","createElement","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","children","Symbol","iterator","next","done","row","value","columnCopy","append","err","return","lastElementChild","remove"],"version":3,"file":"index.02b555d6.js.map"}